{"ast":null,"code":"var _jsxFileName = \"/home/yichen.huang/Projet_Perso/project_8/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\n/*const STYLES = ['btn--primary', 'btn--ouline'];\n\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\n\nconst COLOR = ['primary', 'blue', 'red', 'green'];\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n    const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : null;\n\n    return (\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`}\n            onClick={onClick}\n            type={type}>\n            {children}\n        </button>\n    );\n};*/\n\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\nconst COLOR = ['primary', 'blue', 'red', 'green'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize,\n  buttonColor\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : null;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`,\n    onClick: onClick,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/yichen.huang/Projet_Perso/project_8/src/components/Button.js"],"names":["React","STYLES","SIZES","COLOR","Button","children","type","onClick","buttonStyle","buttonSize","buttonColor","checkButtonStyle","includes","checkButtonSize","checkButtonColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,CAAf;AACA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,EAA8B,aAA9B,EAA6C,WAA7C,CAAd;AACA,MAAMC,KAAK,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,KAApB,EAA2B,OAA3B,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,WAJmB;AAKnBC,EAAAA,UALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOhB;AACF,QAAMC,gBAAgB,GAAGV,MAAM,CAACW,QAAP,CAAgBJ,WAAhB,IAA+BA,WAA/B,GAA6CP,MAAM,CAAC,CAAD,CAA5E;AACA,QAAMY,eAAe,GAAGX,KAAK,CAACU,QAAN,CAAeH,UAAf,IAA6BA,UAA7B,GAA0CP,KAAK,CAAC,CAAD,CAAvE;AACA,QAAMY,gBAAgB,GAAGX,KAAK,CAACS,QAAN,CAAeF,WAAf,IAA8BA,WAA9B,GAA4C,IAArE;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAG,OAAMC,gBAAiB,IAAGE,eAAgB,IAAGC,gBAAiB,EAAlF;AAAqF,IAAA,OAAO,EAAEP,OAA9F;AAAuG,IAAA,IAAI,EAAED,IAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADJ;AAKH,CAjBM","sourcesContent":["import React from 'react';\nimport './Button.css';\n\n/*const STYLES = ['btn--primary', 'btn--ouline'];\n\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\n\nconst COLOR = ['primary', 'blue', 'red', 'green'];\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n    const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : null;\n\n    return (\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`}\n            onClick={onClick}\n            type={type}>\n            {children}\n        </button>\n    );\n};*/\n\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\nconst COLOR = ['primary', 'blue', 'red', 'green'];\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n    const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : null;\n\n    return (\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`} onClick={onClick} type={type}>\n            {children}\n        </button>\n    );\n};"]},"metadata":{},"sourceType":"module"}